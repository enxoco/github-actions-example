name: Build and publish a Docker image
on:
  push:
    branches:
      - '*'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - '*'
jobs:
  context:
    runs-on: ubuntu-latest
    continue-on-error: true  
    steps:  
      - name: github-action-docker-image-exists
        id: image_exists
        run: |
          TOKEN=$(curl -H "Authorization: Basic ${{ secrets.DOCKER_AUTH_TOKEN }}" "https://${{ secrets.DOCKER_REGISTRY }}/oauth2/token?service=${{ secrets.DOCKER_REGISTRY }}&scope=repository:designserver:pull" | jq -r '.access_token')
          MESSAGE=$curl -H "Authorization: Bearer $TOKEN" https://${{ secrets.DOCKER_REGISTRY }}/v2/designserver/manifests/latest | jq -r '.errors[0].message')
          
          IMAGE_FOUND_STRING="OCI index found, but accept header does not support OCI indexes"
          if [[ $MESSAGE = $IMAGE_FOUND_STRING ]]; then
            echo "IMAGE_EXISTS=true" >> "$GITHUB_OUTPUT"
          else
            echo "IMAGE_EXISTS=false" >> "$GITHUB_OUTPUT"
          fi


  build:
    name: Build & push docker image
    runs-on: ubuntu-latest
    # continue_on_error: true
    needs: context
    if: ${{ needs.check_for_changes.outputs.IMAGE_EXISTS == "false" }}
    env:
      IMG_NAME: ${{ secrets.DOCKER_REGISTRY }}/designserver
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.IMG_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value={{sha}},enable=${{ github.ref_type != 'tag' }}
      - name: Log in to acr
        uses: docker/login-action@v3
        # if: ${{ github.ref_type == 'tag' }}
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          file: servers/common/Dockerfile